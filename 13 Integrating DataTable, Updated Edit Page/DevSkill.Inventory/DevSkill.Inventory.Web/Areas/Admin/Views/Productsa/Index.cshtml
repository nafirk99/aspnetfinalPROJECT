@* @model IEnumerable<DevSkill.Inventory.Domain.Entities.Producta>

@{
    ViewData["Title"] = "Product List";
}



    <!-- Test For Dew Index Productsa Design -->
<div class="row">
    <div class="col-md-12">
        <div class="p-4">
            <!-- Flexbox row for Products List and Search -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2><b>Products List</b></h2>
                <!-- Search form aligned to the right -->
                <form asp-action="Index" method="get" class="form-inline">
                    <div class="form-group mx-sm-3">
                        <input type="text" name="searchString" class="form-control" placeholder="Search Products"
                               value="@ViewData["CurrentFilter"]" />
                    </div>
                    <button type="submit" class="btn btn-dark">Search</button>
                </form>
            </div>

            <!-- Products Table -->
            <table class="table table-striped table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" style="width: 1%;">ID</th>
                        <th scope="col">Name</th>
                        <th scope="col">Brand</th>
                        <th scope="col">Price</th>
                        <th scope="col">Description</th>
                        <th scope="col">AIN</th>
                        <th scope="col">Created By</th>
                        <th scope="col">Vendor</th>
                        <th scope="col">Vendor Id</th>
                        <th scope="col">Group</th>
                        <th scope="col">Group Id</th>
                        <th scope="col">Category</th>
                        <th scope="col">Category ID</th>
                        <th scope="col" style="width: 5%;">Image</th>
                        <th scope="col" style="width: 1%;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var products in Model)
                    {
                        <tr>
                            <td>@products.Id</td>
                            <td>@products.Name</td>
                            <td>@products.Brand</td>
                            <td>@products.Price</td>
                            <td>@products.Description</td>
                            <td>@products.AIN</td>
                            <td>@products.CreatedBy</td>
                            <td>@products.Vendor?.Name</td>
                            <td>@products.Vendor?.Id</td>
                            <td>@products.Group?.Name</td>
                            <td>@products.Group?.Id</td>
                            <td>@products.Category?.Name</td>
                            <td>@products.Category?.Id</td>
                            <td><img src="/Products/@products.ImageFileName" width="100" /></td>
                            <td class="text-nowrap">
                                <a asp-action="Edit" asp-route-id="@products.Id" class="btn btn-dark btn-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@products.Id" class="btn btn-danger btn-sm">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Create new category button -->
            <a asp-action="Create" class="btn btn-dark">Add New Product</a>
        </div>
    </div>
</div> *@


<!-- ------------------------------------------------Without Data Table------------------------------------------------------------ -->
@* @model IPagedList<DevSkill.Inventory.Domain.Entities.Producta>

@using X.PagedList
@using X.PagedList.Mvc.Core



@{
    ViewData["Title"] = "Product List";
}

<div class="row">
    <div class="col-md-12">
        <div class="p-4">
            <!-- Flexbox row for Products List and Search -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2><b>Products List</b></h2>
                <!-- Search form aligned to the right -->
                <form asp-action="Index" method="get" class="form-inline">
                    <div class="form-group mx-sm-3">
                        <input type="text" name="searchString" class="form-control" placeholder="Search Products"
                               value="@ViewData["Filter"]" />
                    </div>
                    <button type="submit" class="btn btn-dark">Search</button>
                </form>
            </div>

            <!-- Bulk Delete Button -->
            <form asp-action="BulkDelete" method="post" id="bulkDeleteForm">
                <button type="submit" class="btn btn-danger mb-3" id="bulkDeleteBtn" disabled>Delete Selected</button>

                <!-- Products Table -->
                <table class="table table-striped table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th style="width: 1%;">
                                <input type="checkbox" id="selectAll" /> <!-- Checkbox header -->
                            </th>
                            <th scope="col">ID</th>
                            <th scope="col">Name</th>
                            <th scope="col">Brand</th>
                            <th scope="col">Price</th>
                            <th scope="col">Description</th>
                            <th scope="col">AIN</th>
                            <th scope="col">Created By</th>
                            <th scope="col">Vendor</th>
                            <th scope="col">Group</th>
                            <th scope="col">Category</th>
                            <th scope="col" style="width: 1%;">Image</th>
                            <th scope="col" style="width: 1%;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" name="selectedProducts" value="@product.Id" class="product-checkbox" />
                                </td>
                                <td>@product.Id</td>
                                <td>@product.Name</td>
                                <td>@product.Brand</td>
                                <td>@product.Price.ToString("C")</td>
                                <td>@product.Description</td>
                                <td>@product.AIN</td>
                                <td>@product.CreatedBy</td>
                                <td>@product.Vendor?.Name</td>
                                <td>@product.Group?.Name</td>
                                <td>@product.Category?.Name</td>
                                <td class="grow"><img src="/Products/@product.ImageFileName" width="100" /></td>
                                <td class="text-nowrap">
                                    <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-dark btn-sm">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?')">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>

            <!-- Pagination (aligns to bottom right) -->
            <div class="d-flex justify-content-end mt-3">
                @Html.PagedListPager(
                         Model,
                         page => Url.Action("AssetStockIndex", new { page, searchString = ViewData["Filter"] }),
                         new PagedListRenderOptions
                {
                    LinkToPreviousPageFormat = "Previous",
                    LinkToNextPageFormat = "Next",
                    LinkToFirstPageFormat = "First",
                    LinkToLastPageFormat = "Last",
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayPageCountAndCurrentLocation = false,
                    MaximumPageNumbersToDisplay = 5,
                    ContainerDivClasses = new[] { "pagination" },
                    UlElementClasses = new[] { "pagination" },
                    LiElementClasses = new[] { "page-item" },
                    PageClasses = new[] { "page-link" },

                    ClassToApplyToFirstListItemInPager = "page-item"
                })
            </div>





            <!-- Create new product button -->
            <a asp-action="Create" class="btn btn-dark">Add New Product</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Enable bulk delete button only when at least one checkbox is selected
        const checkboxes = document.querySelectorAll('.product-checkbox');
        const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
        const selectAllCheckbox = document.getElementById('selectAll');

        function toggleBulkDeleteButton() {
            const anyChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
            bulkDeleteBtn.disabled = !anyChecked;
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', toggleBulkDeleteButton);
        });

        // Select/Deselect all checkboxes
        selectAllCheckbox.addEventListener('change', function () {
            checkboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
            toggleBulkDeleteButton();
        });
    </script>
} *@
<!-- ------------------------------------------------With Data Table------------------------------------------------------------ -->
@model IEnumerable<DevSkill.Inventory.Domain.Entities.Producta>
@{
    ViewData["Title"] = "Product List Data Table";
}


<div class="row">
    <div class="col-md-12">
        <div class="p-4">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2><b>Products List DT</b></h2>
            </div>

           @*  <!--ADVANCED SEARCH-->
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="categoryFilter">Category:</label>
                    <select id="categoryFilter" class="form-control">
                        <option value="">Select Category</option>
                        <!-- Add categories dynamically or statically -->
                        <option value="Category1">Category 1</option>
                        <option value="Category2">Category 2</option>
                        <option value="Category3">Category 3</option>
                    </select>
                </div>

                <div class="col-md-4">
                    <label for="dateFilter">Date:</label>
                    <input type="date" id="dateFilter" class="form-control">
                </div>

                <div class="col-md-4">
                    <label for="groupFilter">Group:</label>
                    <select id="groupFilter" class="form-control">
                        <option value="">Select Group</option>
                        <!-- Add groups dynamically or statically -->
                        <option value="Group1">Group 1</option>
                        <option value="Group2">Group 2</option>
                        <option value="Group3">Group 3</option>
                    </select>
                </div>
            </div> *@


            <!-- Bulk Delete Button -->
            <form asp-action="BulkDelete" method="post" id="bulkDeleteForm">
                <button type="submit" class="btn btn-danger mb-3" id="bulkDeleteBtn" disabled>Delete Selected</button>
            <!-- Products Table -->
                    <table id="productTable" class="table table-striped table-bordered table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th style="width: 1%;">
                                    <input type="checkbox" id="selectAll" /> <!-- Checkbox header -->
                                </th>
                                <th scope="col" style="width: 5%;">ID</th>
                                <th scope="col" style="width: 15%;">Name</th>
                                <th scope="col" style="width: 10%;">Brand</th>
                                <th scope="col" style="width: 10%;">Price</th>
                                <th scope="col" style="width: 20%;">Description</th>
                                <th scope="col" style="width: 8%;">AIN</th>
                                <th scope="col" style="width: 8%;">By</th>
                                <th scope="col" style="width: 10%;">Vendor</th>
                                <th scope="col" style="width: 8%;">V.ID</th>
                                <th scope="col" style="width: 10%;">Group</th>
                                <th scope="col" style="width: 8%;">G.ID</th>
                                <th scope="col" style="width: 12%;">Category</th>
                                <th scope="col" style="width: 8%;">C.ID</th>
                                <th scope="col" style="width: 10%;">Image</th>
                                <th scope="col" style="width: 10%;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var products in Model)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" name="selectedProducts" value="@products.Id" class="product-checkbox" />
                                    </td>
                                    <td>@products.Id</td>
                                    <td>@products.Name</td>
                                    <td>@products.Brand</td>
                                    <td>@products.Price</td>
                                    <td>@products.Description</td>
                                    <td>@products.AIN</td>
                                    <td>@products.CreatedBy</td>
                                    <td>@products.Vendor?.Name</td>
                                    <td>@products.Vendor?.Id</td>
                                    <td>@products.Group?.Name</td>
                                    <td>@products.Group?.Id</td>
                                    <td>@products.Category?.Name</td>
                                    <td>@products.Category?.Id</td>
                                    <td><img src="/Products/@products.ImageFileName" width="80" /></td>
                                    <td class="text-nowrap">
                                        <a asp-action="Edit" asp-route-id="@products.Id" class="btn btn-dark btn-sm">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@products.Id" class="btn btn-danger btn-sm">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
            </form>

            <a asp-action="Create" class="btn btn-dark">Add New Product</a>
        </div>
    </div>
</div>



@section Scripts {
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.3/css/buttons.dataTables.min.css">
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#productTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "lengthChange": true,
                "autoWidth": true,
                "pageLength": 10,  // Default number of rows per page
                "dom": 'BlfrtipHa',  // Add 'H' for fixed header, 'S' for state saving
                "pagingType": "full_numbers", // Displays full pagination controls
                "orderMulti": true, // Enables multi-column sorting
                "buttons": [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                "columnDefs": [
                    { "orderable": false, "targets": 0 }, // Disable ordering on select
                    { "orderable": false, "targets": 13 }, // Disable ordering on image column
                    { "orderable": false, "targets": 14 }  // Disable ordering on actions column
                ],
                "stateSave": true,  // Enable state saving (preserve settings like search, pagination, etc.)
                "fixedHeader": true, // Enable fixed header functionality
                "language": {
                    "emptyTable": "No data available",
                    "info": " _START_ to _END_ of _TOTAL_ entries",
                    "search": "Search:",
                    "lengthMenu": "Display _MENU_ records per page",
                    "paginate": {
                        "first": "First",
                        "last": "Last",
                        "next": "Next",
                        "previous": "Previous"
                    }
                }
            });
            // Apply category filter
            $('#categoryFilter').on('change', function () {
                table.column(11).search(this.value).draw(); // 10 corresponds to the Category column index
            });
        });
    </script>
    <script>
        // Enable bulk delete button only when at least one checkbox is selected
        const checkboxes = document.querySelectorAll('.product-checkbox');
        const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
        const selectAllCheckbox = document.getElementById('selectAll');

        function toggleBulkDeleteButton() {
            const anyChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
            bulkDeleteBtn.disabled = !anyChecked;
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', toggleBulkDeleteButton);
        });

        // Select/Deselect all checkboxes
        selectAllCheckbox.addEventListener('change', function () {
            checkboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
            toggleBulkDeleteButton();
        });
    </script>
}


